package Servlets.login;

import RetailShop.Retail_MgrLocal;
import java.io.IOException;
import java.rmi.RemoteException;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import locator.Locator;
import retailcommonlib.ldap.LdapConnStatus;
import retailcommonlib.user.UserProf_mp;


public class VerifyLogin extends HttpServlet {
    
    private boolean isValidLogin ( String UserId, String PassWord) {
        if ( UserId == null || UserId.trim().length() == 0 || PassWord == null || PassWord.trim().length() == 0 )
             return false;
        else return true;
    }
    
    protected void processRequest ( HttpServletRequest req, HttpServletResponse res ) throws ServletException, IOException {
        
        res.setContentType("text/html;charset=UTF-8");
        
        LdapConnStatus    ldap = new LdapConnStatus();
        UserProf_mp      uProf = new UserProf_mp();
        RequestDispatcher disp = null;
        
        String      theJspFile = "/jsp/login/Login.jsp";
        
        try {
          
            String UserId   = req.getParameter("UserId");
            String PassWord = req.getParameter("PassWord");
            
            if ( !isValidLogin(UserId, PassWord) ) {
                ldap.setMessage("ERROR: You are not Logged in to this project !!");
            }
            else {
                Locator        loc = new Locator();
                Retail_MgrLocal remote = loc.beanLookUp();
                if ( remote == null ) throw new RemoteException("ERROR while looking up bean");
                
                UserId = UserId.toLowerCase();
                
                uProf = remote.getUserInfo(UserId);
                if ( !uProf.isOk() ) {
                    ldap.setMessage(uProf.getMessage());
                    throw new Exception("ERROR");
                }
                
                HttpSession session = req.getSession(true);
                if ( session != null) {
                    session.setAttribute("UserId", UserId);
                    session.setAttribute("levelId", uProf.getLevel_id());
                    
                    theJspFile = "/jsp/shop/ShopMenu.jsp";
                }
                
                else ldap.setMessage("ERROR: System is FULL !!");
            }
        }
        catch ( Exception ex ) {
            
        }
        
        req.setAttribute("Message", ldap.getMessage());
        disp = req.getRequestDispatcher(theJspFile);
        disp.forward(req, res);
    }
    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>
}
