package Servlets.shop;

import RetailShop.Retail_MgrLocal;
import java.io.IOException;
import java.io.PrintWriter;
import java.rmi.RemoteException;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import locator.Locator;
import retailcommonlib.ldap.LdapConnStatus;

public class PurchaseOrder extends HttpServlet {

    protected void processRequest(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
        res.setContentType("text/html;charset=UTF-8");
        
        String      theJspFile = "/jsp/users/UserUpdate.jsp";
        LdapConnStatus    ldap = new LdapConnStatus();
        RequestDispatcher disp = null;
       
        try {
            // calling entreprise bean...
            Locator        loc = new Locator();
            Retail_MgrLocal remote = loc.beanLookUp();
            if ( remote == null ) throw new RemoteException("ERROR while looking up bean");
            
            HttpSession session = req.getSession(true);
            if ( session != null) {
                String LevelId  = (String) session.getAttribute("levelId");
                String UserId   = (String) session.getAttribute("UserId");
                int OrderAmount = Integer.parseInt( (String) req.getParameter("order_amount")); 
                int product_type = Integer.parseInt((String) req.getParameter("product_type"));
               
                ldap = remote.getFinalAmount(LevelId,UserId,product_type,OrderAmount);//here we will do the discount related to the level of logged in user 
            
                if(ldap.isRunOk()) {
                    req.setAttribute("FinalAmount", ldap.getAmount());
                }
            }
        }
        catch ( Exception ex ) {}
        
        req.setAttribute("Message", ldap.getMessage());
        disp = req.getRequestDispatcher(theJspFile);
        disp.forward(req, res);
        
    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
